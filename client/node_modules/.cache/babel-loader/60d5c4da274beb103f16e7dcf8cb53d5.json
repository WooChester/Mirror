{"ast":null,"code":"var _jsxFileName = \"/Users/chesterwoo/Desktop/sm/src/store/index.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState } from 'react'; // THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GlobalStoreContext = /*#__PURE__*/createContext({}); // THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\n// DATA STORE STATE THAT CAN BE PROCESSED\n\nexport const GlobalStoreActionType = {\n  TOGGLE_MENU: \"TOGGLE_MENU\",\n  TOGGLE_EDIT: \"TOGGLE_EDIT\",\n  TOGGLE_LIGHT: \"TOGGLE_LIGHT\",\n  INIT_APP: \"INIT_APP\",\n  ADD_APP: \"ADD_APP\",\n  REMOVE_APP: \"REMOVE_APP\",\n  HOLD_APP: \"HOLD_APP\",\n  RELEASE_APP: \"RELEASE_APP\",\n  EDIT_APP: \"EDIT_APP\"\n}; // WE'LL NEED THIS TO PROCESS TRANSACTIONS\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\n// AVAILABLE TO THE REST OF THE APPLICATION\n\nfunction GlobalStoreContextProvider(props) {\n  _s();\n\n  // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\n  const [store, setStore] = useState({\n    active_apps: [],\n    menu_open: false,\n    edit_mode: false,\n    light_mode: false,\n    current_app: null\n  }); // SINCE WE'VE WRAPPED THE STORE IN THE AUTH CONTEXT WE CAN ACCESS THE USER HERE\n  // HERE'S THE DATA STORE'S REDUCER, IT MUST\n  // HANDLE EVERY TYPE OF STATE CHANGE\n\n  const storeReducer = action => {\n    const {\n      type,\n      payload\n    } = action;\n\n    switch (type) {\n      // LIST UPDATE OF ITS NAME\n      case GlobalStoreActionType.TOGGLE_MENU:\n        {\n          return setStore({\n            active_apps: store.active_apps,\n            menu_open: !store.menu_open,\n            edit_mode: false,\n            light_mode: store.light_mode,\n            current_app: null\n          });\n        }\n\n      case GlobalStoreActionType.TOGGLE_EDIT:\n        {\n          return setStore({\n            active_apps: store.active_apps,\n            menu_open: store.menu_open,\n            edit_mode: !store.edit_mode,\n            light_mode: store.light_mode,\n            current_app: null\n          });\n        }\n\n      case GlobalStoreActionType.TOGGLE_LIGHT:\n        {\n          return setStore({\n            active_apps: store.active_apps,\n            menu_open: store.menu_open,\n            edit_mode: store.edit_mode,\n            light_mode: !store.light_mode,\n            current_app: null\n          });\n        }\n\n      case GlobalStoreActionType.INIT_APP:\n        {\n          return setState({\n            active_apps: payload.active_apps,\n            menu_open: false,\n            edit_mode: true,\n            light_mode: store.light_mode,\n            current_app: payload.current_app\n          });\n        }\n\n      case GlobalStoreActionType.ADD_APP:\n        {\n          return setState({\n            active_apps: store.active_apps,\n            menu_open: false,\n            edit_mode: false,\n            light_mode: store.light_mode,\n            current_app: null\n          });\n        }\n\n      case GlobalStoreActionType.REMOVE_APP:\n        {\n          return setState({\n            active_apps: payload.active_apps,\n            menu_open: false,\n            edit_mode: true,\n            light_mode: store.light_mode,\n            current_app: null\n          });\n        }\n\n      case GlobalStoreActionType.HOLD_APP:\n        {\n          return setState({\n            active_apps: store.active_apps,\n            menu_open: false,\n            edit_mode: store.edit_mode,\n            light_mode: store.light_mode,\n            current_app: payload.current_app\n          });\n        }\n\n      case GlobalStoreActionType.RELEASE_APP:\n        {\n          return setState({\n            active_apps: store.active_apps,\n            menu_open: false,\n            edit_mode: store.edit_mode,\n            light_mode: store.light_mode,\n            current_app: null\n          });\n        }\n\n      case GlobalStoreActionType.EDIT_APP:\n        {\n          return setState({\n            active_apps: store.active_apps,\n            menu_open: false,\n            edit_mode: store.edit_mode,\n            light_mode: store.light_mode,\n            current_app: payload.current_app\n          });\n        }\n\n      default:\n        return store;\n    }\n  }; // THESE ARE THE FUNCTIONS THAT WILL UPDATE OUR STORE AND\n  // DRIVE THE STATE OF THE APPLICATION. WE'LL CALL THESE IN \n  // RESPONSE TO EVENTS INSIDE OUR COMPONENTS.\n\n\n  return /*#__PURE__*/_jsxDEV(GlobalStoreContext.Provider, {\n    value: {\n      store\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GlobalStoreContextProvider, \"MxHUgkfduxYyBIwKhAoLQJgb4ak=\");\n\n_c = GlobalStoreContextProvider;\nexport default GlobalStoreContext;\nexport { GlobalStoreContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalStoreContextProvider\");","map":{"version":3,"names":["createContext","useState","GlobalStoreContext","GlobalStoreActionType","TOGGLE_MENU","TOGGLE_EDIT","TOGGLE_LIGHT","INIT_APP","ADD_APP","REMOVE_APP","HOLD_APP","RELEASE_APP","EDIT_APP","GlobalStoreContextProvider","props","store","setStore","active_apps","menu_open","edit_mode","light_mode","current_app","storeReducer","action","type","payload","setState","children"],"sources":["/Users/chesterwoo/Desktop/sm/src/store/index.js"],"sourcesContent":["import { createContext, useState } from 'react'\n\n\n// THIS IS THE CONTEXT WE'LL USE TO SHARE OUR STORE\nexport const GlobalStoreContext = createContext({});\n\n// THESE ARE ALL THE TYPES OF UPDATES TO OUR GLOBAL\n// DATA STORE STATE THAT CAN BE PROCESSED\nexport const GlobalStoreActionType = {\n    TOGGLE_MENU: \"TOGGLE_MENU\",\n    TOGGLE_EDIT: \"TOGGLE_EDIT\",\n    TOGGLE_LIGHT: \"TOGGLE_LIGHT\",\n\n    INIT_APP: \"INIT_APP\",\n    ADD_APP: \"ADD_APP\",\n    REMOVE_APP: \"REMOVE_APP\",\n    HOLD_APP: \"HOLD_APP\",\n    RELEASE_APP: \"RELEASE_APP\",\n    EDIT_APP: \"EDIT_APP\"\n}\n\n// WE'LL NEED THIS TO PROCESS TRANSACTIONS\n// WITH THIS WE'RE MAKING OUR GLOBAL DATA STORE\n// AVAILABLE TO THE REST OF THE APPLICATION\nfunction GlobalStoreContextProvider(props) {\n    // THESE ARE ALL THE THINGS OUR DATA STORE WILL MANAGE\n    const [store, setStore] = useState({\n        active_apps: [],\n        menu_open: false,\n        edit_mode: false,\n        light_mode: false,\n        current_app: null\n    });\n\n    // SINCE WE'VE WRAPPED THE STORE IN THE AUTH CONTEXT WE CAN ACCESS THE USER HERE\n\n    // HERE'S THE DATA STORE'S REDUCER, IT MUST\n    // HANDLE EVERY TYPE OF STATE CHANGE\n    const storeReducer = (action) => {\n        const { type, payload } = action;\n        switch (type) {\n            // LIST UPDATE OF ITS NAME\n            case GlobalStoreActionType.TOGGLE_MENU: {\n                return setStore({\n                    active_apps: store.active_apps,\n                    menu_open: !store.menu_open,\n                    edit_mode: false,\n                    light_mode: store.light_mode,\n                    current_app: null\n                });\n            }\n            case GlobalStoreActionType.TOGGLE_EDIT: {\n                return setStore({\n                    active_apps: store.active_apps,\n                    menu_open: store.menu_open,\n                    edit_mode: !store.edit_mode,\n                    light_mode: store.light_mode,\n                    current_app: null\n                });\n            }\n            case GlobalStoreActionType.TOGGLE_LIGHT: {\n                return setStore({\n                    active_apps: store.active_apps,\n                    menu_open: store.menu_open,\n                    edit_mode: store.edit_mode,\n                    light_mode: !store.light_mode,\n                    current_app: null\n                });\n            }\n            case GlobalStoreActionType.INIT_APP: {\n                return setState({\n                    active_apps: payload.active_apps,\n                    menu_open: false,\n                    edit_mode: true,\n                    light_mode: store.light_mode,\n                    current_app: payload.current_app\n                });\n            }\n            case GlobalStoreActionType.ADD_APP: {\n                return setState({\n                    active_apps: store.active_apps,\n                    menu_open: false,\n                    edit_mode: false,\n                    light_mode: store.light_mode,\n                    current_app: null\n                });\n            }\n            case GlobalStoreActionType.REMOVE_APP: {\n                return setState({\n                    active_apps: payload.active_apps,\n                    menu_open: false,\n                    edit_mode: true,\n                    light_mode: store.light_mode,\n                    current_app: null\n                });\n            }\n            case GlobalStoreActionType.HOLD_APP: {\n                return setState({\n                    active_apps: store.active_apps,\n                    menu_open: false,\n                    edit_mode: store.edit_mode,\n                    light_mode: store.light_mode,\n                    current_app: payload.current_app\n                });\n            }\n            case GlobalStoreActionType.RELEASE_APP: {\n                return setState({\n                    active_apps: store.active_apps,\n                    menu_open: false,\n                    edit_mode: store.edit_mode,\n                    light_mode: store.light_mode,\n                    current_app: null\n                });\n            }\n\n            case GlobalStoreActionType.EDIT_APP: {\n                return setState({\n                    active_apps: store.active_apps,\n                    menu_open: false,\n                    edit_mode: store.edit_mode,\n                    light_mode: store.light_mode,\n                    current_app: payload.current_app\n                });\n            }\n\n            default:\n                return store;\n        }\n    }\n\n    // THESE ARE THE FUNCTIONS THAT WILL UPDATE OUR STORE AND\n    // DRIVE THE STATE OF THE APPLICATION. WE'LL CALL THESE IN \n    // RESPONSE TO EVENTS INSIDE OUR COMPONENTS.\n\n    return (\n        <GlobalStoreContext.Provider value={{\n            store\n        }}>\n            {props.children}\n        </GlobalStoreContext.Provider>\n    );\n}\n\nexport default GlobalStoreContext;\nexport { GlobalStoreContextProvider };"],"mappings":"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"},"metadata":{},"sourceType":"module"}